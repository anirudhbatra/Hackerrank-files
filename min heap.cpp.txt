#include<bits/stdc++.h>
using namespace std;

class minheap {
	int capacity=10;
	int size=0;

	int items = new int[capacity];
	
	int getLeftChildIndex(int parentIndex) { return 2* parentIndex +1; }
	int getRightChildIndex(int parentIndex) { return 2* parentIndex +2; }
	int getParentIndex(int childIndex) { return (childIndex - 1) / 2; }

	bool hasLeftChild(int index) { return getLeftChild(index) < size; }
	bool hasRightChild(int index) { return getRightChild(index) < size; }
	bool hasParent(int index) { return getParentIndex(index) >= 0; }

	int leftChild(int index) { return items[getLeftChildIndex(index)]; }
	int rightChild(int index) { return items[getRightChildIndex(index)]; }
	int parent(int index) { return items[getParentIndex(index)]; }
	
	void swap(int index1, int index2) {
		int temp;
	}
}
